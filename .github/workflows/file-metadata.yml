name: Track File Metadata (Detailed Log)

on:
  push:
    branches:
      - main

jobs:
  log-file-metadata:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup environment
        run: |
          mkdir -p metadata
          # If the metadata.json file doesn't exist, create it as an empty JSON object '{}'
          if [ ! -f metadata/metadata.json ]; then
            echo '{}' > metadata/metadata.json
          fi

      - name: Detect changed files
        id: changed
        run: |
          git diff-tree --no-commit-id --name-only -r ${{ github.sha }} > changed_files.txt
          echo "files=$(cat changed_files.txt | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

      - name: Update metadata.json
        env:
          PR_TITLE: ${{ github.event.head_commit.message }}
        run: |
          TIMESTAMP=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          cp metadata/metadata.json metadata/metadata.json.bak
          jq '.' metadata/metadata.json > metadata/_temp.json || echo "{}" > metadata/_temp.json

          for FILE in $(cat changed_files.txt); do
            if [ -f "$FILE" ]; then
              SIZE=$(stat -c %s "$FILE")
              jq \
                --arg file "$FILE" \
                --arg date "$TIMESTAMP" \
                --arg title "${{ env.PR_TITLE }}" \
                --argjson size "$SIZE" \
                '.[$file] += [{"date": $date, "title": $title, "size": $size}] // {($file): [{"date": $date, "title": $title, "size": $size}]}' \
                metadata/_temp.json > metadata/_new.json && mv metadata/_new.json metadata/_temp.json
            fi
          done

          mv metadata/_temp.json metadata/metadata.json

        # Check if the metadata.json file has changed
      - name: Check if metadata.json has changed
        id: check-changes
        run: |
          git diff --exit-code metadata/metadata.json || echo "metadata_changed=true" >> $GITHUB_ENV

      - name: Commit and push changes
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.email "actions@github.com"
          git fetch origin
          git config user.name "github-actions"
          git add metadata/metadata.json
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/MarufHasan24/reasearch.git
          git checkout main
